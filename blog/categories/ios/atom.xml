<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Haven's Dev Blog]]></title>
  <link href="http://ondev.github.io/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://ondev.github.io/"/>
  <updated>2014-02-08T11:10:25+08:00</updated>
  <id>http://ondev.github.io/</id>
  <author>
    <name><![CDATA[Haven]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LevelDB for iOS]]></title>
    <link href="http://ondev.github.io/blog/2014/02/08/leveldb-for-ios/"/>
    <updated>2014-02-08T10:50:00+08:00</updated>
    <id>http://ondev.github.io/blog/2014/02/08/leveldb-for-ios</id>
    <content type="html"><![CDATA[<p>最近NO SQL型数据库比较火，本人也想了解了解。于是找到了LevelDB这个数据库,它是一个KV型的数库据，还度那是杠杠的。于是试着用一下。</p>

<p>它是开源的，首先得编译它。网上已有很多人成功编译了它。
首先就是下载源码
<code>
clone levelDB repo https://code.google.com/p/leveldb/
</code>
这个工程里的mackfile就支持编译iOS平台，只不过很久有没有更新了，现在iOS7出来后，常用指令集分别是armv7,armv7s,arm64. 对于armv6我们可以放弃了，毕竟技术是在不断发展的，过时的就不要用了。
现在我们来修改Makefile, 主要就是去掉armv6, 然后增加armv7s与arm64.</p>

<p>定位到.cc.o的198行与.c.o的205行
修改为：</p>

<p>```
.cc.o:</p>

<pre><code>mkdir -p ios-x86/$(dir $@)
$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $&lt; -o ios-x86/$@
mkdir -p ios-arm/$(dir $@)
xcrun -sdk iphoneos $(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv7 -arch armv7s -arch arm64 -c $&lt; -o ios-arm/$@
lipo ios-x86/$@ ios-arm/$@ -create -output $@
</code></pre>

<p>.c.o:</p>

<pre><code>mkdir -p ios-x86/$(dir $@)
$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $&lt; -o ios-x86/$@
mkdir -p ios-arm/$(dir $@)
xcrun -sdk iphoneos $(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk  -arch armv7 -arch armv7s -arch arm64 -c $&lt; -o ios-arm/$@
lipo ios-x86/$@ ios-arm/$@ -create -output $@
</code></pre>

<p>```
保存，</p>

<p>然后用命令进行编译</p>

<p>```
CXXFLAGS=-stdlib=libc++ make PLATFORM=IOS</p>

<p>```
或</p>

<p><code>
CXXFLAGS=-stdlib=libstdc++ make PLATFORM=IOS
</code>
都可以，由于用到了c++标准库，这儿分别用了新旧不同的库而已。libc++是支持c++ 11标准的，这儿分别对应xcode中引用的两个库ibc++.dylib与libstdc++.dylib两个库。</p>

<p>编译成功后，在源码根目录就会有一个libleveldb.a的库文件与include的头文件目录。然后就可以试用了。这儿我引用<a href="http://www.tanhao.me/pieces/1397.html">老谭</a>哥写好的wrapper，并写了一个for iOS的测试工程。
创建一个iOS的新工程，将libleveldb.a与include copy到工程目录中，然后将libleveldb.a拖到工程中，接着配置header查找目录，在xcode setting中的Header Search path中加入一行${SRCROOT}，它后面选择recursive， 表示在工程源码目录中递归遍历查找头文件。
<img src="http://user-image.logdown.io/user/6397/blog/6392/post/177919/9MjT1fJxRXCdmUCZgmio_Screen%20Shot%202014-02-04%20at%201.52.41%20pm.png" alt="Screen Shot 2014-02-04 at 1.52.41 pm.png" /></p>

<p>接着在AppDelegate.m中引入老潭的wrapper头文件</p>

<p>```</p>

<h1>import &ldquo;THLevelDB.h&rdquo;</h1>

<p>```</p>

<p>接着在didFinishLaunchingWithOptions中写测试代码。</p>

<p>```
NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);</p>

<pre><code>NSString *dbPath = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"leveldb_demo.ldb"];
THLevelDB *db = [THLevelDB levelDBWithPath:dbPath];

//存储字符串
[db setString:@"成都" forKey:@"city"];

//存储基本类型
[db setInt:13579 forKey:@"count"];
[db setFloat:30.2 forKey:@"temperature"];

//存储Data数据
NSData *data = [@"天府之国" dataUsingEncoding:NSUTF8StringEncoding];
[db setData:data forKey:@"data"];

//存储任意对象(实现了NSCoding协议的对象)
[db setObject:[NSDate date] forKey:@"object"];


NSLog(@"城市:%@",[db stringForKey:@"city"]);
NSLog(@"数量:%d",[db intForKey:@"count"]);
NSLog(@"Data:%@",[db dataForKey:@"data"]);
NSLog(@"对象:%@",[db objectForKey:@"object"]);
</code></pre>

<p>```</p>

<p>测试工程<a href="https://github.com/ondev/LevelDBiOSDemo">传送门</a>。</p>

<hr />

<p>参考：<br>
<a href="http://blog.rpplusplus.me/blog/2014/01/20/build-leveldb/">http://blog.rpplusplus.me/blog/2014/01/20/build-leveldb/</a>
<a href="http://www.tanhao.me/pieces/1397.html">http://www.tanhao.me/pieces/1397.html</a>
<a href="http://herkuang.info/blog/2014/01/28/ios%E4%B8%8B%E7%BC%96%E8%AF%91leveldb%E7%9A%84%E6%80%BB%E7%BB%93/">http://herkuang.info/blog/2014/01/28/ios%E4%B8%8B%E7%BC%96%E8%AF%91leveldb%E7%9A%84%E6%80%BB%E7%BB%93/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7新知识汇总]]></title>
    <link href="http://ondev.github.io/blog/2013/10/10/ios7xin-zhi-shi-hui-zong/"/>
    <updated>2013-10-10T20:50:00+08:00</updated>
    <id>http://ondev.github.io/blog/2013/10/10/ios7xin-zhi-shi-hui-zong</id>
    <content type="html"><![CDATA[<p>iOS7给我们带来了好多东西，表示我们将有新东西要学习了，在此记录一些网上的教程，方便自己与大家学习。</br></p>

<h4>iOS7 CoreBluetooth</h4>

<p><a href="http://www.doubleencore.com/2013/09/whats-new-in-bluetooth-le-ios-7/"><a href="http://www.doubleencore.com/2013/09/whats-new-in-bluetooth-le-ios-7/">http://www.doubleencore.com/2013/09/whats-new-in-bluetooth-le-ios-7/</a></a></br>
<a href="https://developer.apple.com/library/ios/documentation/NetworkingInternetWeb/Conceptual/CoreBluetooth_concepts/AboutCoreBluetooth/Introduction.html">CoreBluetooth</a></p>

<h4>iOS7 Feature</h4>

<p><a href="http://blog.bignerdranch.com/3899-uikit-dynamics-and-ios-7-building-uikit-pong/">iOS7 UIKit Dynamics 1</a> </br>
<a href="http://www.raywenderlich.com/50197/uikit-dynamics-tutorial">iOS7 UIKit Dynamics 2</a></br>
<a href="http://www.raywenderlich.com/42699/spritekit-tutorial-for-beginners">iOS7 Sprint Kit</a> </br>
<a href="http://blog.bignerdranch.com/3784-javascriptcore-and-ios-7/">iOS7 JavascriptCore</a></br>
<a href="http://www.raywenderlich.com/51127/nsurlsession-tutorial">iOS7 NSURLSession</a></br>
<a href="http://www.raywenderlich.com/50151/text-kit-tutorial">iOS7 Text Kit</a></br></p>

<h4>iBeacon</h4>

<p><a href="http://redbearlab.com/ibeacon/"><a href="http://redbearlab.com/ibeacon/">http://redbearlab.com/ibeacon/</a></a>  </br>
<a href="http://www.devfright.com/ibeacons-tutorial-ios-7-clbeaconregion-clbeacon/"><a href="http://www.devfright.com/ibeacons-tutorial-ios-7-clbeaconregion-clbeacon/">http://www.devfright.com/ibeacons-tutorial-ios-7-clbeaconregion-clbeacon/</a></a> </br>
<a href="http://maniacdev.com/2013/10/example-an-app-using-the-new-ios-7-ibeacon-api"><a href="http://maniacdev.com/2013/10/example-an-app-using-the-new-ios-7-ibeacon-api">http://maniacdev.com/2013/10/example-an-app-using-the-new-ios-7-ibeacon-api</a></a></br></p>

<h4>iOS7 Multipeer Connectivity</h4>

<p><a href="http://techmaster.vn/2013/09/multipeer-connectivity-quick-tutorial/"><a href="http://techmaster.vn/2013/09/multipeer-connectivity-quick-tutorial/">http://techmaster.vn/2013/09/multipeer-connectivity-quick-tutorial/</a></a></br></p>

<h4>Other iOS7 Tutorial</h4>

<p><a href="http://www.shinobicontrols.com/blog/posts/2013/09/19/introducing-ios7-day-by-day/"><a href="http://www.shinobicontrols.com/blog/posts/2013/09/19/introducing-ios7-day-by-day/">http://www.shinobicontrols.com/blog/posts/2013/09/19/introducing-ios7-day-by-day/</a></a></br>
<a href="https://github.com/shu223/iOS7-Sampler"><a href="https://github.com/shu223/iOS7-Sampler">https://github.com/shu223/iOS7-Sampler</a></a></br>
<a href="http://www.doubleencore.com/2013/09/essential-ios-7-developers-guide/"><a href="http://www.doubleencore.com/2013/09/essential-ios-7-developers-guide/">http://www.doubleencore.com/2013/09/essential-ios-7-developers-guide/</a></a></br>
<a href="http://www.objc.io/issue-5/"><a href="http://www.objc.io/issue-5/">http://www.objc.io/issue-5/</a></a></br>
<a href="http://www.captechconsulting.com/blog-tags/ios">iOS7 Tutorial Series</a></br></p>

<p>如果你有更好的教程请补充。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DeckView在iOS7中的bug]]></title>
    <link href="http://ondev.github.io/blog/2013/10/04/deckviewzai-ios7zhong-de-bug/"/>
    <updated>2013-10-04T20:17:00+08:00</updated>
    <id>http://ondev.github.io/blog/2013/10/04/deckviewzai-ios7zhong-de-bug</id>
    <content type="html"><![CDATA[<p>前面有两篇文件介绍了适配iOS7的工作，也总结了其最主要的改变就是view全屏模式的布局方式。<br>
我iOS开发的朋友可能用过<a href="https://github.com/Inferis/ViewDeck" >ViewDeck</a>这个库，它可以做出类似facebook那样的左右滑动的效果。当你升级到iOS7后，将会有一些问题。这篇文章将介绍我遇到的问题及解决方法。<br></p>

<p>首先，我说说我用viewdeck的ui布局， window的rooterViewController是一个UITabBarViewController, 然后IIViewDeckController是UITabBarViewController的子view. 然后每一个IIViewDeckController的left,center是UINavigationController. 还有一点需要说明， UITabBar的background Image是自定义的一张图片。</p>

<p>这样的布局在iOS6上显示正常的，在iOS7 3.5 retina的Simulator上显示也是正常的，但是在iPhone4s上显示不正确了，IIViewDeckController的left与center的view高度刚好少44。也就是说这个问题只会在设备上出现。我debug了一下，发现造成这个问题的原因是UITabBar自定义了背景图片，如果不自定义则ok.但是我们的程序是需要自定义UITabBar的背景的。由于我看到刚好少了44px,所以我就试着在IIViewDeckController的viewDidLoad中加了一句代码：</p>

<p>```
if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 7) {</p>

<pre><code>    self.extendedLayoutIncludesOpaqueBars = YES;
}
</code></pre>

<p>```</p>

<p>这样就可以成功运行了。
这句话的意思就是，是否延升到Tabbar区域。默认是NO的，由于Tabbar是44px,这样修改刚好可以fix这个问
但是最让我费解的就是在Simulator上没有这个问题，在Device上有问题，不过问题总算解决了。</p>

<p>我也把我做的<a href="https://github.com/ondev/TestViewDeck">测试工程</a>放到了GitHub, 大家可以下载分别运行到Simulator与Device, 然后把上面代码注释掉再运行做比较。
我的开发环境是:Version 5.0 (5A1413) + iOS7</p>

<p>如果你的测试结果与我不一样，请告诉我。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS7隐藏status bar]]></title>
    <link href="http://ondev.github.io/blog/2013/09/28/ios7yin-cang-status-bar/"/>
    <updated>2013-09-28T18:38:00+08:00</updated>
    <id>http://ondev.github.io/blog/2013/09/28/ios7yin-cang-status-bar</id>
    <content type="html"><![CDATA[<p>iOS7中，状态栏变化比较大，hide/show状态的方法也不一样了。
在iOS7以前的版本，hide是通过以下代码实现</p>

<p><code>
[[UIApplication sharedApplication] setStatusBarHidden:YES withAnimation:UIStatusBarAnimationSlide];
</code></p>

<p>在iOS7中默认情况下，这个方法不成功了。到setStatusBarHidden:withAnimation:声明的头文件去看看，多了一句注释：
// Setting statusBarHidden does nothing if your application is using the default UIViewController-based status bar system.
现在在iOS7中，status bar的外观默认依赖UIViewController, 也就是说status bar随UIViewController的不同而不同。在这种默认的方式下，用全局的方法setStatusBarHidden:withAnimation:是行不通的。</p>

<p>解决方法是在infor.plist中加入key:UIViewControllerBasedStatusBarAppearance 并设置其值为NO，这样就告诉系统，status bar不依赖于UIViewController.
这样就可以通过上面的方法来hiden status bar.</p>

<p>如果是在默认情况下，如果我们要hiden如何办呢。</p>

<p>只需要实现两个新方法</p>

<p>```
&ndash; (UIStatusBarStyle)preferredStatusBarStyle
{</p>

<pre><code>return UIStatusBarStyleLightContent;
//UIStatusBarStyleDefault = 0 黑色文字，浅色背景时使用
//UIStatusBarStyleLightContent = 1 白色文字，深色背景时使用
</code></pre>

<p>}</p>

<ul>
<li>(BOOL)prefersStatusBarHidden
{
  return NO; //返回NO表示要显示，返回YES将hiden
}
```
上面一个回调方法返回status bar显示时候的样式，下面一个回调控制是否显示status bar.</li>
</ul>


<p>调用下面的一行代码将会触发上面的回调</p>

<p><code>
[self setNeedsStatusBarAppearanceUpdate];
</code></p>

<p>如果想在hiden/show之间有点动画效果，用下面的代码即可：</p>

<p>```
[UIView animateWithDuration:0.5 animations:^{</p>

<pre><code>    [self setNeedsStatusBarAppearanceUpdate];
}];
</code></pre>

<p>```</p>

<p>现在介绍完毕在iOS7下操作status bar.如有问题，欢迎大家指正。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[适配iOS7开发2]]></title>
    <link href="http://ondev.github.io/blog/2013/09/28/gua-pei-ios7kai-fa-2/"/>
    <updated>2013-09-28T16:54:00+08:00</updated>
    <id>http://ondev.github.io/blog/2013/09/28/gua-pei-ios7kai-fa-2</id>
    <content type="html"><![CDATA[<p>在前一篇文章中介绍了非autolayout模式下iOS7的适配工作。
今天来介绍一下autolayout下的适配工作。</p>

<p>首先，我们用xcode4.6.3创建一个simgle view application. 选中Use storyboard.</p>

<p>拖一个UIButton到view中。 由于开启了autoLayout， 在xcode4.6.3中，自动会有两个auto layout约束，分别是水平与垂直的约束：</p>

<p><img src="/images/toiOS72/ios72_tut1.png"/><br/></p>

<p>运行程序效果：</p>

<br/>


<p><img src="/images/toiOS72/ios72_tut2.png"/><br/>
可以看到是垂直方向上距status bar底部是45px，距右边是186px.</p>

<p>现在我们用xcode5打开这个工程。会提示Upgrade storyboard，我们点击Upgrade.
Upgrade后，你会发现，垂直方向上有变化了，约束是从顶部开始，不是从status bar底部开始计算。这也我们想要的结果不一样，我们还是希望约束是从status bar底部开始计算。</p>

<p>仔细看看storyboard中的View Controller， 你会发现，这儿多了两个东东，分别是Top Layout Guide，Bottom Layout Guide.
<img src="/images/toiOS72/ios72_tut3.png"/><br/></p>

<p>选在我们的button,按住control键，然后拖到Top Layout Guide上，在弹出的对话框选择Vertical spacing</p>

<br/>


<p><img src="/images/toiOS72/ios72_tut4.png"/><br/>
这样又建立了一个垂直约束，你会发现这个约束是从Status bar底部开始计算的。这个约束有点像是我们需要的，
<img src="/images/toiOS72/ios72_tut5.png"/><br/>
但是这个约束距status bar是25px,我们想要的是45px. 那只需要修改一下，将25px改为45px
<img src="/images/toiOS72/ios72_tut6.png"/><br/>
你会发现有storyboard中有红色提示，这说明约束条件发生了冲突，因为垂直约束的值都为45，显示冲突了。由于我们只需要status bar底部开始计算的那个约束，所以我们将旧的那个删掉即可。
<img src="/images/toiOS72/ios72_tut7.png"/><br/></p>

<p>现在分别选择iOS6/iOS7来运行。都是距status bar下面45px显示button. 适配工程完成。</p>

<p>顺便介绍一下xcode5中，用xib或storyboard布局的时候，preview iOS7与iOS7以前版本的效果。
快捷键：option+command+enter 打开Assistant editor,然后选择右边的automatic->preview->xxxxx(preview)</p>

<br/>


<p><img src="/images/toiOS72/ios72_tut8.png"/><br/>
然后在出现的画面下面有一个切换iOS7与以前版本的切换开关</p>

<br/>


<p><img src="/images/toiOS72/ios72_tut9.png"/><br/></p>

<p>这样可以方例你实时的查看布局效果以适配不同版本的iOS.</p>

<p>最后：
auto layout是好东西，虽然只有>iOS6的版本才支持，但是我还是建意大家用auto layout,因为以后苹果也可能出现多种屏幕，到时候代码修改量将会减少。</p>

<p>参考：<a href＝“https://developer.apple.com/library/ios/qa/qa1797/_index.html”><a href="https://developer.apple.com/library/ios/qa/qa1797/_index.html">https://developer.apple.com/library/ios/qa/qa1797/_index.html</a></a></p>
]]></content>
  </entry>
  
</feed>
