<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Lib | Haven's Dev Blog]]></title>
  <link href="http://ondev.github.io/blog/categories/lib/atom.xml" rel="self"/>
  <link href="http://ondev.github.io/"/>
  <updated>2014-02-08T11:10:25+08:00</updated>
  <id>http://ondev.github.io/</id>
  <author>
    <name><![CDATA[Haven]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LevelDB for iOS]]></title>
    <link href="http://ondev.github.io/blog/2014/02/08/leveldb-for-ios/"/>
    <updated>2014-02-08T10:50:00+08:00</updated>
    <id>http://ondev.github.io/blog/2014/02/08/leveldb-for-ios</id>
    <content type="html"><![CDATA[<p>最近NO SQL型数据库比较火，本人也想了解了解。于是找到了LevelDB这个数据库,它是一个KV型的数库据，还度那是杠杠的。于是试着用一下。</p>

<p>它是开源的，首先得编译它。网上已有很多人成功编译了它。
首先就是下载源码
<code>
clone levelDB repo https://code.google.com/p/leveldb/
</code>
这个工程里的mackfile就支持编译iOS平台，只不过很久有没有更新了，现在iOS7出来后，常用指令集分别是armv7,armv7s,arm64. 对于armv6我们可以放弃了，毕竟技术是在不断发展的，过时的就不要用了。
现在我们来修改Makefile, 主要就是去掉armv6, 然后增加armv7s与arm64.</p>

<p>定位到.cc.o的198行与.c.o的205行
修改为：</p>

<p>```
.cc.o:</p>

<pre><code>mkdir -p ios-x86/$(dir $@)
$(CXX) $(CXXFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $&lt; -o ios-x86/$@
mkdir -p ios-arm/$(dir $@)
xcrun -sdk iphoneos $(CXX) $(CXXFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk -arch armv7 -arch armv7s -arch arm64 -c $&lt; -o ios-arm/$@
lipo ios-x86/$@ ios-arm/$@ -create -output $@
</code></pre>

<p>.c.o:</p>

<pre><code>mkdir -p ios-x86/$(dir $@)
$(CC) $(CFLAGS) -isysroot $(SIMULATORROOT)/SDKs/iPhoneSimulator$(IOSVERSION).sdk -arch i686 -c $&lt; -o ios-x86/$@
mkdir -p ios-arm/$(dir $@)
xcrun -sdk iphoneos $(CC) $(CFLAGS) -isysroot $(DEVICEROOT)/SDKs/iPhoneOS$(IOSVERSION).sdk  -arch armv7 -arch armv7s -arch arm64 -c $&lt; -o ios-arm/$@
lipo ios-x86/$@ ios-arm/$@ -create -output $@
</code></pre>

<p>```
保存，</p>

<p>然后用命令进行编译</p>

<p>```
CXXFLAGS=-stdlib=libc++ make PLATFORM=IOS</p>

<p>```
或</p>

<p><code>
CXXFLAGS=-stdlib=libstdc++ make PLATFORM=IOS
</code>
都可以，由于用到了c++标准库，这儿分别用了新旧不同的库而已。libc++是支持c++ 11标准的，这儿分别对应xcode中引用的两个库ibc++.dylib与libstdc++.dylib两个库。</p>

<p>编译成功后，在源码根目录就会有一个libleveldb.a的库文件与include的头文件目录。然后就可以试用了。这儿我引用<a href="http://www.tanhao.me/pieces/1397.html">老谭</a>哥写好的wrapper，并写了一个for iOS的测试工程。
创建一个iOS的新工程，将libleveldb.a与include copy到工程目录中，然后将libleveldb.a拖到工程中，接着配置header查找目录，在xcode setting中的Header Search path中加入一行${SRCROOT}，它后面选择recursive， 表示在工程源码目录中递归遍历查找头文件。
<img src="http://user-image.logdown.io/user/6397/blog/6392/post/177919/9MjT1fJxRXCdmUCZgmio_Screen%20Shot%202014-02-04%20at%201.52.41%20pm.png" alt="Screen Shot 2014-02-04 at 1.52.41 pm.png" /></p>

<p>接着在AppDelegate.m中引入老潭的wrapper头文件</p>

<p>```</p>

<h1>import &ldquo;THLevelDB.h&rdquo;</h1>

<p>```</p>

<p>接着在didFinishLaunchingWithOptions中写测试代码。</p>

<p>```
NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);</p>

<pre><code>NSString *dbPath = [[paths objectAtIndex:0] stringByAppendingPathComponent:@"leveldb_demo.ldb"];
THLevelDB *db = [THLevelDB levelDBWithPath:dbPath];

//存储字符串
[db setString:@"成都" forKey:@"city"];

//存储基本类型
[db setInt:13579 forKey:@"count"];
[db setFloat:30.2 forKey:@"temperature"];

//存储Data数据
NSData *data = [@"天府之国" dataUsingEncoding:NSUTF8StringEncoding];
[db setData:data forKey:@"data"];

//存储任意对象(实现了NSCoding协议的对象)
[db setObject:[NSDate date] forKey:@"object"];


NSLog(@"城市:%@",[db stringForKey:@"city"]);
NSLog(@"数量:%d",[db intForKey:@"count"]);
NSLog(@"Data:%@",[db dataForKey:@"data"]);
NSLog(@"对象:%@",[db objectForKey:@"object"]);
</code></pre>

<p>```</p>

<p>测试工程<a href="https://github.com/ondev/LevelDBiOSDemo">传送门</a>。</p>

<hr />

<p>参考：<br>
<a href="http://blog.rpplusplus.me/blog/2014/01/20/build-leveldb/">http://blog.rpplusplus.me/blog/2014/01/20/build-leveldb/</a>
<a href="http://www.tanhao.me/pieces/1397.html">http://www.tanhao.me/pieces/1397.html</a>
<a href="http://herkuang.info/blog/2014/01/28/ios%E4%B8%8B%E7%BC%96%E8%AF%91leveldb%E7%9A%84%E6%80%BB%E7%BB%93/">http://herkuang.info/blog/2014/01/28/ios%E4%B8%8B%E7%BC%96%E8%AF%91leveldb%E7%9A%84%E6%80%BB%E7%BB%93/</a></p>
]]></content>
  </entry>
  
</feed>
